/**
 * generated by Xtext 2.25.0
 */
package cn.simbaba.mydsl.jp.impl;

import cn.simbaba.mydsl.jp.JpPackage;
import cn.simbaba.mydsl.jp.JpScript;
import cn.simbaba.mydsl.jp.Operation;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.xtext.common.types.JvmParameterizedTypeReference;

import org.eclipse.xtext.xbase.XBlockExpression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Script</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link cn.simbaba.mydsl.jp.impl.JpScriptImpl#getName <em>Name</em>}</li>
 *   <li>{@link cn.simbaba.mydsl.jp.impl.JpScriptImpl#getAuthor <em>Author</em>}</li>
 *   <li>{@link cn.simbaba.mydsl.jp.impl.JpScriptImpl#getSuperType <em>Super Type</em>}</li>
 *   <li>{@link cn.simbaba.mydsl.jp.impl.JpScriptImpl#getOperations <em>Operations</em>}</li>
 *   <li>{@link cn.simbaba.mydsl.jp.impl.JpScriptImpl#getScriptBody <em>Script Body</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JpScriptImpl extends MinimalEObjectImpl.Container implements JpScript
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getAuthor() <em>Author</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthor()
   * @generated
   * @ordered
   */
  protected static final String AUTHOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAuthor() <em>Author</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthor()
   * @generated
   * @ordered
   */
  protected String author = AUTHOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getSuperType() <em>Super Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSuperType()
   * @generated
   * @ordered
   */
  protected JvmParameterizedTypeReference superType;

  /**
   * The cached value of the '{@link #getOperations() <em>Operations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperations()
   * @generated
   * @ordered
   */
  protected EList<Operation> operations;

  /**
   * The cached value of the '{@link #getScriptBody() <em>Script Body</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScriptBody()
   * @generated
   * @ordered
   */
  protected XBlockExpression scriptBody;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JpScriptImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JpPackage.Literals.JP_SCRIPT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JpPackage.JP_SCRIPT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAuthor()
  {
    return author;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAuthor(String newAuthor)
  {
    String oldAuthor = author;
    author = newAuthor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JpPackage.JP_SCRIPT__AUTHOR, oldAuthor, author));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JvmParameterizedTypeReference getSuperType()
  {
    return superType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSuperType(JvmParameterizedTypeReference newSuperType, NotificationChain msgs)
  {
    JvmParameterizedTypeReference oldSuperType = superType;
    superType = newSuperType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JpPackage.JP_SCRIPT__SUPER_TYPE, oldSuperType, newSuperType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSuperType(JvmParameterizedTypeReference newSuperType)
  {
    if (newSuperType != superType)
    {
      NotificationChain msgs = null;
      if (superType != null)
        msgs = ((InternalEObject)superType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JpPackage.JP_SCRIPT__SUPER_TYPE, null, msgs);
      if (newSuperType != null)
        msgs = ((InternalEObject)newSuperType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JpPackage.JP_SCRIPT__SUPER_TYPE, null, msgs);
      msgs = basicSetSuperType(newSuperType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JpPackage.JP_SCRIPT__SUPER_TYPE, newSuperType, newSuperType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Operation> getOperations()
  {
    if (operations == null)
    {
      operations = new EObjectContainmentEList<Operation>(Operation.class, this, JpPackage.JP_SCRIPT__OPERATIONS);
    }
    return operations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public XBlockExpression getScriptBody()
  {
    return scriptBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetScriptBody(XBlockExpression newScriptBody, NotificationChain msgs)
  {
    XBlockExpression oldScriptBody = scriptBody;
    scriptBody = newScriptBody;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JpPackage.JP_SCRIPT__SCRIPT_BODY, oldScriptBody, newScriptBody);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setScriptBody(XBlockExpression newScriptBody)
  {
    if (newScriptBody != scriptBody)
    {
      NotificationChain msgs = null;
      if (scriptBody != null)
        msgs = ((InternalEObject)scriptBody).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JpPackage.JP_SCRIPT__SCRIPT_BODY, null, msgs);
      if (newScriptBody != null)
        msgs = ((InternalEObject)newScriptBody).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JpPackage.JP_SCRIPT__SCRIPT_BODY, null, msgs);
      msgs = basicSetScriptBody(newScriptBody, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JpPackage.JP_SCRIPT__SCRIPT_BODY, newScriptBody, newScriptBody));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JpPackage.JP_SCRIPT__SUPER_TYPE:
        return basicSetSuperType(null, msgs);
      case JpPackage.JP_SCRIPT__OPERATIONS:
        return ((InternalEList<?>)getOperations()).basicRemove(otherEnd, msgs);
      case JpPackage.JP_SCRIPT__SCRIPT_BODY:
        return basicSetScriptBody(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JpPackage.JP_SCRIPT__NAME:
        return getName();
      case JpPackage.JP_SCRIPT__AUTHOR:
        return getAuthor();
      case JpPackage.JP_SCRIPT__SUPER_TYPE:
        return getSuperType();
      case JpPackage.JP_SCRIPT__OPERATIONS:
        return getOperations();
      case JpPackage.JP_SCRIPT__SCRIPT_BODY:
        return getScriptBody();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JpPackage.JP_SCRIPT__NAME:
        setName((String)newValue);
        return;
      case JpPackage.JP_SCRIPT__AUTHOR:
        setAuthor((String)newValue);
        return;
      case JpPackage.JP_SCRIPT__SUPER_TYPE:
        setSuperType((JvmParameterizedTypeReference)newValue);
        return;
      case JpPackage.JP_SCRIPT__OPERATIONS:
        getOperations().clear();
        getOperations().addAll((Collection<? extends Operation>)newValue);
        return;
      case JpPackage.JP_SCRIPT__SCRIPT_BODY:
        setScriptBody((XBlockExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JpPackage.JP_SCRIPT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case JpPackage.JP_SCRIPT__AUTHOR:
        setAuthor(AUTHOR_EDEFAULT);
        return;
      case JpPackage.JP_SCRIPT__SUPER_TYPE:
        setSuperType((JvmParameterizedTypeReference)null);
        return;
      case JpPackage.JP_SCRIPT__OPERATIONS:
        getOperations().clear();
        return;
      case JpPackage.JP_SCRIPT__SCRIPT_BODY:
        setScriptBody((XBlockExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JpPackage.JP_SCRIPT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case JpPackage.JP_SCRIPT__AUTHOR:
        return AUTHOR_EDEFAULT == null ? author != null : !AUTHOR_EDEFAULT.equals(author);
      case JpPackage.JP_SCRIPT__SUPER_TYPE:
        return superType != null;
      case JpPackage.JP_SCRIPT__OPERATIONS:
        return operations != null && !operations.isEmpty();
      case JpPackage.JP_SCRIPT__SCRIPT_BODY:
        return scriptBody != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", author: ");
    result.append(author);
    result.append(')');
    return result.toString();
  }

} //JpScriptImpl
